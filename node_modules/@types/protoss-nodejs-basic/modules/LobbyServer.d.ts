declare namespace zetaret.node.modules {
	export interface LobbyServerCTOR {
		new(): LobbyServer
	}
	export interface LobbyServer extends Subserver {
		lobbyId: string;
		lobbyData: object;
		apps: object;
		users: object;
		rooms: object;
		lobbyEvents: zetaret.node.Emitter;

		initLobby(): void
		initRooms(): void
		initApps(): void
		connectTo(options: object, data?: string, secure?: boolean): zetaret.node.XRequest
		promiseConnectTo(options: object, data?: string, secure?: boolean): Promise<object>
		onConnectError(e: Error): void
		onConnected(res: zetaret.node.Cross): void
		lobby(data: object): zetaret.node.modules.LobbyServer
		updateRemoveUser(u: LobbyUser, update?: boolean, remove?: boolean): zetaret.node.modules.LobbyServer
		updateRemoveRoom(r: LobbyRoom, update?: boolean, remove?: boolean): zetaret.node.modules.LobbyServer
		updateRemoveApp(a: LobbyApp, update?: boolean, remove?: boolean): zetaret.node.modules.LobbyServer
		user(userId: string, usercls?: Function): zetaret.node.modules.LobbyUser
		room(roomId: string, roomcls?: Function): zetaret.node.modules.LobbyRoom
		app(appId: string, appcls?: Function): zetaret.node.modules.LobbyApp
	}
}