{
	"author": "Zeta Ret",
	"description": "use ProtoSS super qualified names in `require` and `import`",
	"text": "swap `Module._resolveFilename` with supername validator, add alias path maps, supernames and namespace folders",
	"requires": null,
	"version": "1.0.1",
	"date": "2019 - Today",
	"supername": "zetaret.node.utils.nano::RequireSupername",
	"inherits": null,
	"interfaces": null,
	"static": {
		"public_properties": {},
		"protected_properties": {},
		"private_properties": {},
		"public_methods": {},
		"protected_methods": {},
		"private_methods": {}
	},
	"public_properties": {
		"maps": "Object: {}",
		"supernames": "Object: {}",
		"namespaces": "Object: {}",
		"ext": "Array: ['js']"
	},
	"protected_properties": {},
	"private_properties": {},
	"public_methods": {
		"RequireSupername": "; return Array",
		"initRequireSupername": "",
		"verifySupername": "id*: String",
		"setPathSupername": "supername*: String, paths*: Array",
		"setSupername": "supername*: String, path*: String",
		"setNamespace": "ns*: String, paths*: Array",
		"setNamespaceMap": "nsmap*: Object"
	},
	"protected_methods": {},
	"private_methods": {},
	"static_descriptions": {},
	"descriptions": {
		"RequireSupername": {
			"this": "require the module first, initialize, and set map from JSON or file"
		},
		"verifySupername": {
			"this": "execute RegExp supername match validation, check namespace folders and file existence per registered extension"
		}
	},
	"static_examples": {},
	"examples": {
		"RequireSupername": [
			"var rsn = require('./path/to/utils/nano/RequireSupername.js');",
			"rsn.initRequireSupername();",
			"rsn.setNamespaceMap({",
			"\t'zetaret.node.utils': [path.resolve(__dirname, './../../utils/')]",
			"});",
			"var htmlparser = require('zetaret.node.utils.html::HTMLParser'),",
			"\thtmlcache = require('zetaret.node.utils.html::HTMLCache'),"
		]
	}
}