{
	"author": "Zeta Ret",
	"description": "Route map listener server",
	"text": "Subserver of extended Server loaded as module",
	"requires": "events",
	"version": "1.13.0",
	"date": "2019 - Today",
	"supername": "zetaret.node.modules::Subserver",
	"inherits": ["[zetaret.node.modules::XProtoSSChe](XProtoSSChe.md)"],
	"interfaces": null,
	"static": {
		"public_properties": {
			"xpros": "Module: load",
			"EVENTS": "Object: const",
			"SERVERID": "String: supername"
		},
		"protected_properties": {},
		"private_properties": {},
		"public_methods": {},
		"protected_methods": {},
		"private_methods": {}
	},
	"public_properties": {
		"routeMap": "Object: {}",
		"codeMap": "Object: {}",
		"noRouteCode": "Number: 404",
		"noRouteEvent": "String: 'error404'",
		"debugRoute": "Boolean: true",
		"listener": "events.EventEmitter: new",
		"pathEmitter": "events.EventEmitter: new",
		"routeRegMap": "Object: {}",
		"routeRegExp": "RegExp: [\\w|\\-]+",
		"routeRegGet": "Function: null",
		"useProxy": "Boolean: true",
		"proxyPaths": "String: '__proxypaths'",
		"proxyMask": "Object: {}",
		"noProxyCode": "Number: 400",
		"noProxyEvent": "String: 'proxyNoRoute'",
		"emitExacts": "Boolean: false"
	},
	"protected_properties": {},
	"private_properties": {},
	"public_methods": {
		"Subserver": "",
		"addPathListener": "path*: String, callback: Function; return Function",
		"removePathListener": "path*: String, callback*: Function; return zetaret.node.modules::Subserver",
		"pathListener": "server*: zetaret.node.modules.Subserver, robj*: Object, routeData*: Object, request*: http.ClientRequest|http.IncomingMessage, response*: http.ServerResponse",
		"addMethodPathListener": "method*: String, path*: String, callback*: Function; return Function",
		"addParamsPathListener": "path*: String, callback*: Function|Array<Function>, method: String, autoRoute: Boolean; return Function",
		"addRegPathListener": "path*: String, callback*: Function; return Function",
		"setRouteRegExp": "path*: String; return RegExp",
		"routeCallback": "routeData*: Object, body*: String, request*: http.ClientRequest|http.IncomingMessage, response*: http.ServerResponse",
		"initRoute": "",
		"initRouteListener": "; return zetaret.node.modules::Subserver",
		"addRouter": "router: zetaret.node.api.Router",
		"pushProtoSSResponse": "request*: http.ClientRequest|http.IncomingMessage, response*: http.ServerResponse; return zetaret.node.modules::Subserver",
		"addHeaders": "request*: http.ClientRequest|http.IncomingMessage, response*: http.ServerResponse; return Object"
	},
	"protected_methods": {},
	"private_methods": {},
	"static_descriptions": {},
	"descriptions": {
		"routeMap": "object map by route path id, if no map is extended due to new Subserver subclass, then noRouteCode and noRouteEvent will occur at all times",
		"codeMap": "http codes based on raw path",
		"routeRegMap": "map of RegExp string routes",
		"initRoute": {
			"this": "set routeScope to self"
		},
		"routeCallback": {
			"this": "reads response.__breakRoute to stop routing, augments route object"
		}
	},
	"static_examples": {},
	"examples": {
		"addRegPathListener": ["server.addRegPathListener('profiles/[\\w]+/photo-id/[\\w]+$', (server, robj, routeData, request, response) => {});"]
	}
}