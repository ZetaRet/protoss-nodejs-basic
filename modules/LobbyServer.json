{
	"author": "Zeta Ret",
	"description": "Lobby auth and rooms of Subserver",
	"text": "Distribute users after authentication into rooms or applications based on requirements",
	"requires": "http, https, events",
	"version": "1.4.0",
	"date": "2019 - Today",
	"supername": "zetaret.node.modules::LobbyServer",
	"inherits": ["[zetaret.node.modules::Subserver](Subserver.md)"],
	"interfaces": null,
	"static": {
		"public_properties": {
			"xpros": "Module: load",
			"EVENTS": "Object: const",
			"SERVERID": "String: supername",
			"lobbyUserClass": "LobbyUser: module",
			"lobbyRoomClass": "LobbyRoom: module",
			"lobbyAppClass": "LobbyApp: module"
		},
		"protected_properties": {},
		"private_properties": {},
		"public_methods": {},
		"protected_methods": {},
		"private_methods": {}
	},
	"public_properties": {
		"lobbyId": "String: null",
		"lobbyData": "Object: {}",
		"apps": "Object: {}",
		"users": "Object: {}",
		"rooms": "Object: {}",
		"lobbyEvents": "events.EventEmitter: new"
	},
	"protected_properties": {},
	"private_properties": {},
	"public_methods": {
		"LobbyServer": "",
		"initLobby": "",
		"initRooms": "",
		"initApps": "",
		"connectTo": "options*: Object, data: String, secure: Boolean; return http.ClientRequest",
		"onConnectError": "e*: Error",
		"onConnected": "res*: http.IncomingMessage|http.ServerResponse",
		"lobby": "data*: Object; return zetaret.node.modules::LobbyServer",
		"updateRemoveUser": "u*: LobbyUser, update: Boolean, remove: Boolean; return zetaret.node.modules::LobbyServer",
		"updateRemoveRoom": "r*: LobbyRoom, update: Boolean, remove: Boolean; return zetaret.node.modules::LobbyServer",
		"updateRemoveApp": "a*: LobbyApp, update: Boolean, remove: Boolean; return zetaret.node.modules::LobbyServer",
		"user": "userId*: String, usercls: Function; return zetaret.node.modules::LobbyUser",
		"room": "roomId*: String, roomcls: Function; return zetaret.node.modules::LobbyRoom",
		"app": "appId*: String, appcls: Function; return zetaret.node.modules::LobbyApp"
	},
	"protected_methods": {},
	"private_methods": {},
	"static_descriptions": {},
	"descriptions": {
		"LobbyServer": {
			"this": "implement application based lobby logic using provided objects"
		},
		"connectTo": {
			"this": "connect to another server or lobby, auto-configure options{port, method}",
			"options": "default http server options per request",
			"data": "data to send with request",
			"secure": "connect to SSL server port using https",
			"return": "ends automatically"
		},
		"lobby": {
			"this": "update current lobby server data"
		},
		"user": {
			"this": "add new user to lobby using default/custom Class"
		},
		"room": {
			"this": "add new room to lobby using default/custom Class"
		},
		"app": {
			"this": "add new app to lobby using default/custom Class"
		}
	},
	"static_examples": {},
	"examples": {},
	"imports": ["zetaret.node.modules::LobbyUser", "zetaret.node.modules::LobbyRoom", "zetaret.node.modules::LobbyApp"]
}